{"version":3,"sources":["img/nav.png","img/section4.png","img/section5.png","img/section6.png","img/section1.png","img/section2.png","img/section3.png","img/rightnav.png","Components/Sidebar.js","Components/Header.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","jQuery","$","require","Sidebar","summaries","each","i","summary","next","scrollToFixed","marginTop","outerHeight","limit","offset","top","this","zIndex","id","class","className","React","Component","Header","src","nav","alt","Footer","bottom","section4","section5","section6","App","section1","section2","section3","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,yFCA3CD,EAAOC,QAAU,IAA0B,sC,0ICG3CC,OAAOC,OAASD,OAAOE,EAAIA,IAC3BC,EAAQ,G,IA6DOC,E,kLAxDP,IAAIC,EAAYH,IAAE,YAClBG,EAAUC,MAAK,SAASC,GACpB,IAAIC,EAAUN,IAAEG,EAAUE,IACtBE,EAAOJ,EAAUE,EAAI,GAEzBC,EAAQE,cAAc,CAClBC,UAAWT,IAAE,WAAWU,aAAY,GAAQ,GAC5CC,MAAO,WACH,IAAIA,EAAQ,EAMZ,OAJIA,EADAJ,EACQP,IAAEO,GAAMK,SAASC,IAAMb,IAAEc,MAAMJ,aAAY,GAAQ,GAEnDV,IAAE,WAAWY,SAASC,IAAMb,IAAEc,MAAMJ,aAAY,GAAQ,GAE7DC,GAEXI,OAAQ,W,+BAMhB,OACI,6BACI,wBAAIC,GAAG,WAAWC,MAAM,WAChB,wBAAIC,UAAU,YAAd,2BAC4B,6BAD5B,yBAEsB,6BAFtB,6BAGsB,6BAHtB,0BAIuB,6BAJvB,2BAKoB,6BALpB,0BAMmB,6BANnB,cAOO,6BAPP,eAQQ,6BAGZ,6BAEpB,+CAAuB,6BAbC,qDAc0B,6BAClD,6BAEA,mDAA2B,6BAjBH,uBAkBJ,6BAlBI,2BAmBA,6BAnBA,4BAoBC,6BApBD,oC,GA3BFC,IAAMC,W,gBCJ5BtB,OAAOC,OAASD,OAAOE,EAAIA,IAC3BC,EAAQ,G,IAgBOoB,E,kLAXPrB,IAAE,WAAWQ,kB,+BAGb,OACI,yBAAKU,UAAU,UACV,yBAAKI,IAAKC,IAAKL,UAAU,MAAMM,IAAI,a,GAP/BJ,a,mDCDrBtB,OAAOC,OAASD,OAAOE,EAAIA,IAC3BC,EAAQ,G,IA6BOwB,E,kLAzBPzB,IAAE,WAAWQ,cAAe,CACxBkB,OAAQ,EACRf,MAAOX,IAAE,WAAWY,SAASC,Q,+BAIjC,OACI,6BACJ,wBAAII,MAAM,UACN,yBAAKA,MAAM,QAAX,2CAEJ,wBAAIA,MAAM,kBACN,yBAAKA,MAAM,QAEX,yBAAKK,IAAKK,IAAUT,UAAU,WAAWM,IAAI,aACnD,yBAAKF,IAAKM,IAAUV,UAAU,WAAWM,IAAI,aAC7C,yBAAKF,IAAKO,IAAUX,UAAU,WAAWM,IAAI,oB,GAlB9BJ,a,mDC+BNU,MA/Bf,WACE,OACE,yBAAKZ,UAAU,OAInB,4BACQ,wBAAIA,UAAU,oBACd,kBAAC,EAAD,OAEA,wBAAID,MAAM,gBACN,4BACI,wBAAIA,MAAM,QACV,yBAAKK,IAAKS,IAAUb,UAAU,WAAWM,IAAI,aACvD,yBAAKF,IAAKU,IAAUd,UAAU,WAAWM,IAAI,aAC7C,yBAAKF,IAAKW,IAAUf,UAAU,WAAWM,IAAI,cAGnC,wBAAIP,MAAM,SACN,kBAAC,EAAD,SAKZ,kBAAC,EAAD,SCrBYiB,QACW,cAA7BpC,OAAOqC,SAASC,UAEe,UAA7BtC,OAAOqC,SAASC,UAEhBtC,OAAOqC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.de86dca4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav.5f7b29c3.png\";","module.exports = __webpack_public_path__ + \"static/media/section4.944ff89d.png\";","module.exports = __webpack_public_path__ + \"static/media/section5.3c2e5afe.png\";","module.exports = __webpack_public_path__ + \"static/media/section6.8d7ed42a.png\";","module.exports = __webpack_public_path__ + \"static/media/section1.51b282d6.png\";","module.exports = __webpack_public_path__ + \"static/media/section2.c697135d.png\";","module.exports = __webpack_public_path__ + \"static/media/section3.5d77a366.png\";","module.exports = __webpack_public_path__ + \"static/media/rightnav.d868683f.png\";","import React from 'react'\nimport rightnav from '../img/rightnav.png'\nimport $ from 'jquery'\nwindow.jQuery = window.$ = $;\nrequire('scrolltofixed');\n\n\nclass Sidebar extends React.Component {\n    componentDidMount() {\n        var summaries = $('.summary');\n        summaries.each(function(i) {\n            var summary = $(summaries[i]);\n            var next = summaries[i + 1];\n\n            summary.scrollToFixed({\n                marginTop: $('.header').outerHeight(true) + 40,\n                limit: function() {\n                    var limit = 0;\n                    if (next) {\n                        limit = $(next).offset().top - $(this).outerHeight(true) - 10;\n                    } else {\n                        limit = $('.footer').offset().top - $(this).outerHeight(true) - 10;\n                    }\n                    return limit;\n                },\n                zIndex: 999\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div >\n                <ul id=\"summary1\" class=\"summary\">\n                        <li className=\"contents\">  \n                        Degree Planning &amp; DPSS ><br/>\n                    Registration &amp; Howdy ><br/>\n                    Professional Development ><br/>\n                    Thesis &amp; Dissertation ><br/>\n                    Funding Your Education ><br/>\n                    Wellbeing and Support ><br/>\n                    Calendar > <br/>\n                    Contact Us ><br/>\n\n\n                    <hr/>\n\n<b>Knowledge Center</b><br/>\nYour one-stop shop for forms, policies and FAQs. ><br/>\n<hr/>\n\n<b>Tour our new office:</b><br/>\n112 Jack K. Williams<br/>\nAdministration Building,<br/>\nCollege Station, TX 77843<br/>\nFind us on the Aggie Map >\n\n\n                        </li>\n                    </ul>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar","import React, {Component} from 'react'\nimport nav from '../img/nav.png';\nimport $ from 'jquery'\nwindow.jQuery = window.$ = $;\nrequire('scrolltofixed');\n\n\nclass Header extends Component {\n    componentDidMount() {\n        $('.header').scrollToFixed();\n    }\n    render() {\n        return (\n            <div className=\"header\">\n                 <img src={nav} className=\"nav\" alt=\"nav\" />\n            </div>\n        ); \n    }\n}\n  \nexport default Header;","import React, {Component} from 'react'\nimport section4 from '../img/section4.png'\nimport section5 from '../img/section5.png'\nimport section6 from '../img/section6.png'\n\nimport $ from 'jquery'\nwindow.jQuery = window.$ = $;\nrequire('scrolltofixed');\n\nclass Footer extends Component {\n    componentDidMount() {\n        $('.footer').scrollToFixed( {\n            bottom: 0,\n            limit: $('.footer').offset().top\n        });\n    }\n    render() {\n        return (\n            <div>\n        <li class=\"footer\">\n            <div class=\"main\">DRIVEN TO CHANGE THE WORLD? SO ARE WE.</div>\n        </li>\n        <li class=\"footer-content\">\n            <div class=\"main\">\n\n            <img src={section4} className=\"section4\" alt=\"section4\" />\n      <img src={section5} className=\"section5\" alt=\"section5\" />\n      <img src={section6} className=\"section6\" alt=\"section6\" />\n\n            </div>\n        </li>\n        </div>\n        ); \n    }\n}\n  \nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Sidebar from './Components/Sidebar'\nimport Header from './Components/Header'\nimport Footer from './Components/Footer'\nimport section1 from './img/section1.png'\nimport section2 from './img/section2.png'\nimport section3 from './img/section3.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n\n<ul>\n        <li className=\"header-container\">\n        <Header />\n        </li>\n        <li class=\"content main\">\n            <ul>\n                <li class=\"left\">\n                <img src={section1} className=\"section1\" alt=\"section1\" />\n      <img src={section2} className=\"section2\" alt=\"section2\" />\n      <img src={section3} className=\"section3\" alt=\"section3\" />\n\n                </li>\n                <li class=\"right\">\n                    <Sidebar/>\n                </li>\n\n            </ul>\n        </li>\n        <Footer />\n\n    </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}